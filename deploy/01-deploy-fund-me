const { network, ethers } = require('hardhat');
const {
    networkConfig,
    developmentChains,
} = require('../helper-hardhat-config');

const { verify } = require('.././utils/verify');

require('dotenv').config();

module.exports = async ({ getNamedAccounts, deployments }) => {
    const { deploy, log } = deployments;
    const { deployer } = await getNamedAccounts();
    const chainId = network.config.chainId;
    let ethUSDPriceFeedAddress;
    if (developmentChains.includes(network.name)) {
        ethUSDAggregator = await ethers.getContract(
            'MockV3Aggregator',
            deployer
        );
        console.log('ethUSDAggregator', ethUSDAggregator);
        ethUSDPriceFeedAddress = await ethUSDAggregator.target;
    } else {
        console.log('chainId', chainId);
        ethUSDPriceFeedAddress = networkConfig[chainId].priceFeedAddress;
    }
    const args = [ethUSDPriceFeedAddress];
    console.log('ethUSDPriceFeedAddress', ethUSDPriceFeedAddress);
    const nonce = await ethers.provider.getTransactionCount(deployer);
    await deploy('FundMe', {
        contract: 'FundMe',
        from: deployer,
        args: args,
        log: true,
        waitConfirmations: network.config.blockConfirmations || 1,
        nonce,
    });
    if (
        !developmentChains.includes(network.name) &&
        process.env.ETHERSCAN_API_KEY
    ) {
        // why args = [ethUSDPriceFeedAddress], cz fundme constructor requires
        // 思考 为什么要pass ethUSDPriceFeedAddress才能verify？
        // 思考 ethUSDPriceFeedAddress 是怎么在合约上使用的？
        await verify(fundMe.address, args);
    }
    const contractFundMe = await ethers.getContract('FundMe', deployer);
    console.log(
        'Fund Me Price Feed Address: ',
        await contractFundMe.getPriceFeed()
    );
    log('----------------------------------------------------------------');
};

module.exports.tags = ['all', 'fundMe'];
